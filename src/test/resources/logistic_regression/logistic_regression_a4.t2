int main(void) {
  int num_inferences, num_attributes, i;
  int[] weights;
  EncInt w_, accum_, temp_;
  EncInt[] inputs_;

  num_inferences = 10;
  num_attributes = 4;
  weights = { 1, 2, 3, 4 };
  accum_ = 0;
  inputs_ = new EncInt[num_attributes];
  inputs_[0] = { 1, 4, 7, 10, 13, 16, 19, 22, 25, 28 };
  inputs_[1] = { 2, 5, 8, 11, 14, 17, 20, 23, 26, 29 };
  inputs_[2] = { 3, 6, 9, 12, 15, 18, 21, 24, 27, 30 };
  inputs_[3] = { 1, 3, 6, 9, 12, 15, 18, 21, 24, 27 };

  // Server side encrypted computation. //

  // Multiply all attributes by the pre-trained weights and accumulate.
  tstart();
  for (i = 0; i < num_attributes; i++) {
    w_ = weights[i];
    inputs_[i] *= w_;
    accum_ += inputs_[i];
  }

  // Sigmoid: (1/2 + x/4 + x^3/48)*48 = (24 + 12x + x^3)
  // Calculate x^3.
  temp_ = accum_ * accum_;
  temp_ *= accum_;
  // Calculate 12x.
  accum_ *= 12;
  // Calculate x^3 + 12x.
  accum_ += temp_;
  // Calculate x^3 + 12x + 24.
  accum_ += 24;
  tstop();
  // Decrypt
  print_batched(accum_, num_inferences);
  return 0;
}
