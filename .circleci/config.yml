version: 2.1

jobs:
  openjdk-11:
    description: A template for running T2 tests on the CircleCI OpenJDK VM
    docker:
      - image: cimg/openjdk:11.0
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    steps:
      - checkout # change this from "checkout" to "*localCheckout" when running CircleCI locally
      - restore_cache:
          keys:
            - deps-{{ checksum ".circleci/build_libs.sh" }}-{{ checksum "pom.xml" }}-{{ .Branch }}
            - deps-{{ checksum "pom.xml" }}-{{ .Branch }}

      - run:
          name: Install dependencies to build HE libraries
          command: >
            sudo apt update -qq && 
            sudo apt install cmake make build-essential g++ clang autoconf javacc patchelf m4 tar lzip libfftw3-dev &&
            wget -c https://go.dev/dl/go1.17.6.linux-amd64.tar.gz &&
            sudo tar -C /usr/local -xzf go1.17.6.linux-amd64.tar.gz &&
            export PATH=$PATH:/usr/local/go/bin

      - run:
          name: Resolve all maven project dependencies
          command: mvn dependency:go-offline

      - run:
          name: Build T2 compiler and run tests
          command: export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:/usr/local/lib" && mvn package

      - run:
          name: Clone HE libraries
          command: .circleci/clone_libs.sh

      - run:
          name: Build HE libraries
          command: .circleci/build_libs.sh
          no_output_timeout: 40m

      - save_cache:
          paths:
            - ~/.m2
            - ~/project/HElib
            - ~/project/lattigo
            - ~/project/palisade-release
            - ~/project/SEAL
            - ~/project/tfhe
          key: deps-{{ checksum ".circleci/build_libs.sh" }}-{{ checksum "pom.xml" }}-{{ .Branch }}

      - run:
          name: Install HElib v2.2.1
          command: >
            sudo make install &&
            sudo ln -sf /usr/local/lib/libntl.so.44 /usr/lib/libntl.so.44
          working_directory: HElib/build

      - run:
          name: Install Lattigo v2.4.0
          command: >
            git reset --hard 55f9a0247e2092a53be7630d6b2ca79021700a62
          working_directory: lattigo

      - run:
          name: Install PALISADE v1.11.6
          command: >
            sudo make install
          working_directory: palisade-release/build

      - run:
          name: Install SEAL 3.7.2
          command: >
            sudo cmake --install build
          working_directory: SEAL

      - run:
          name: Install TFHE 1.1
          command: >
            sudo make install &&
            sudo ln -sf /usr/local/lib/libtfhe-nayuki-avx.so /usr/lib/libtfhe-nayuki-avx.so &&
            sudo ln -sf /usr/local/lib/libtfhe-nayuki-portable.so /usr/lib/libtfhe-nayuki-portable.so &&
            sudo ln -sf /usr/local/lib/libtfhe-spqlios-avx.so /usr/lib/libtfhe-spqlios-avx.so &&            
            sudo ln -sf /usr/local/lib/libtfhe-spqlios-fma.so /usr/lib/libtfhe-spqlios-fma.so
          working_directory: tfhe

      - run:
          name: Run T2 tests
          command: mvn test

      - run:
          name: Run HElib tests
          command: .circleci/test_HElib.sh
          no_output_timeout: 40m

      - run:
          name: Run Lattigo tests
          command: .circleci/test_Lattigo.sh
          no_output_timeout: 40m

      - run:
          name: Run SEAL tests
          command: .circleci/test_SEAL.sh
          no_output_timeout: 40m

      - run:
          name: Run TFHE tests
          command: .circleci/test_TFHE.sh
          no_output_timeout: 40m

      - run:
          name: Run PALISADE tests
          command: .circleci/test_PALISADE.sh
          no_output_timeout: 80m

workflows:
  version: 2.1
  build:
    jobs:
      - openjdk-11:
          name: openjdk-11
