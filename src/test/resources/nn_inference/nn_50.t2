int main(void) {
  // Initializations
  EncInt[] in_, l1out_, res_;
  int[] w, b1, b2;
  int in_size, l1out_neurons, l2out_neurons, i, j;
  in_size = 28*28;
  l1out_neurons = 50;
  l2out_neurons = 10;
  l1out_ = new EncInt[l1out_neurons];
  res_ = new EncInt[l2out_neurons];
  in_ = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,
  31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,
  61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90,
  91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116,
  117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140,
  141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
  165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
  189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
  213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236,
  237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 0, 1, 2, 3, 4, 5, 6, 7,
  8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37,
  38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
  68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97,
  98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
  122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145,
  146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,
  170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193,
  194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
  218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
  242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
  15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
  45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,
  75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
  104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
  128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
  152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175,
  176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199,
  200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223,
  224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247,
  248, 249, 250, 251, 252, 253, 254, 255, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };
  w = { 86, 66, 101, 237, 254, 15, 170, 22, 70, 49, 71, 207, 164, 204, 85, 242, 
       247, 135, 69, 82, 135, 9, 9, 178, 80, 36, 43, 47, 185, 87, 216, 64, 190, 
       175, 212, 108, 219, 89, 103, 1, 212, 46, 195, 253, 167, 222, 69, 135, 52, 
       36, 164, 129, 19, 199, 38, 145, 120, 109, 76, 35, 145, 29, 60, 59, 85, 
       231, 168, 76, 14, 243, 132, 136, 28, 23, 32, 210, 125, 217, 1, 52, 231, 
       118, 119, 126, 32, 96, 193, 230, 107, 100, 191, 197, 237, 208, 106, 164, 
       33, 177, 213, 199, 141, 10, 254, 141, 18, 118, 168, 182, 197, 246, 58, 41, 
       212, 52, 126, 169, 99, 95, 151, 4, 150, 199, 9, 41, 204, 60, 127, 251, 93, 
       239, 37, 67, 6, 136, 89, 40, 129, 68, 229, 96, 255, 205, 18, 124, 88, 193, 
       64, 164, 39, 7, 107, 10, 227, 22, 176, 77, 98, 193, 181, 207, 26, 37, 125, 
       151, 199, 164, 149, 76, 141, 78, 64, 1, 217, 11, 198, 187, 5, 163, 159, 224, 
       215, 173, 255, 185, 27, 153, 124, 224, 214, 55, 179, 48, 20, 37, 231, 172, 
       242, 85, 199, 164, 217, 176, 119, 135, 30, 117, 199, 229, 191, 19, 13, 226, 
       31, 13, 226, 5, 217, 184, 8, 199, 89, 225, 100, 18, 232, 94, 165, 198, 255, 
       7, 43, 185, 5, 57, 68, 199, 133, 1, 139, 107, 168, 127, 184, 132, 121, 47, 
       210, 129, 133, 84, 133, 120, 75, 229, 89, 139, 84, 61, 50, 187, 98, 80, 
       255, 130, 140, 28, 241, 2, 198, 105, 88, 9, 145, 88, 81, 216, 31, 155, 253, 
       68, 49, 44, 185, 7, 100, 140, 12, 155, 161, 246, 95, 53, 167, 148, 250, 28, 
       60, 149, 240, 15, 44, 131, 54, 101, 191, 128, 85, 160, 43, 10, 240, 144, 
       224, 236, 155, 27, 41, 46, 18, 116, 16, 245, 221, 5, 2, 252, 147, 76, 211, 
       71, 183, 26, 5, 138, 60, 85, 172, 144, 242, 251, 173, 65, 193, 152, 240, 
       1, 135, 62, 156, 81, 205, 140, 146, 15, 56, 174, 148, 230, 182, 141, 195, 
       22, 205, 75, 60, 116, 35, 63, 106, 169, 182, 256, 72, 235, 250, 28, 11, 
       140, 144, 232, 255, 23, 138, 133, 251, 201, 69, 49, 197, 250, 1, 166, 140, 
       89, 168, 123, 249, 246, 37, 80, 49, 193, 107, 176, 71, 103, 136, 38, 239, 
       110, 54, 202, 255, 175, 196, 192, 196, 152, 115, 205, 228, 46, 185, 151, 
       132, 108, 188, 107, 242, 192, 69, 240, 250, 159, 116, 252, 187, 48, 220, 
       55, 54, 91, 54, 35, 119, 199, 9, 121, 173, 30, 183, 245, 57, 50, 179, 14, 
       43, 190, 45, 103, 175, 149, 145, 41, 101, 33, 83, 172, 71, 16, 71, 252, 138, 
       76, 159, 56, 158, 51, 193, 129, 19, 86, 246, 117, 43, 128, 199, 186, 117, 
       30, 225, 93, 33, 25, 33, 45, 152, 139, 102, 56, 12, 182, 134, 198, 34, 46, 
       249, 172, 67, 187, 128, 33, 128, 100, 161, 240, 114, 199, 109, 16, 4, 1, 
       85, 250, 171, 178, 218, 215, 157, 141, 102, 126, 175, 215, 52, 89, 125, 
       68, 159, 47, 91, 224, 218, 80, 16, 194, 172, 62, 159, 92, 12, 23, 8, 59, 
       163, 25, 165, 230, 210, 139, 16, 175, 10, 166, 160, 42, 142, 213, 55, 119, 
       120, 235, 205, 107, 200, 81, 65, 138, 146, 51, 41, 190, 253, 225, 136, 168, 117, 71, 
       88, 135, 209, 38, 3, 21, 202, 158, 55, 208, 184, 236, 107, 32, 28, 20, 2, 
       24, 13, 149, 154, 20, 72, 224, 89, 227, 145, 79, 213, 188, 72, 31, 77, 247, 
       85, 193, 133, 39, 16, 200, 242, 211, 156, 39, 207, 162, 46, 184, 163, 51, 
       97, 132, 1, 177, 48, 59, 250, 250, 66, 1, 189, 80, 53, 109, 192, 43, 221, 
       40, 232, 256, 135, 224, 184, 32, 113, 39, 37, 18, 201, 1, 47, 115, 187, 46, 
       40, 109, 130, 124, 73, 131, 171, 240, 187, 79, 6, 221, 27, 107, 57, 192, 
       71, 249, 86, 220, 114, 204, 35, 214, 45, 199, 236, 237, 71, 1, 224, 32, 92, 
       64, 243, 78, 39, 68, 74, 149, 29, 229, 116, 220, 178, 244, 37, 82, 106, 95, 
       149, 192, 151, 90, 144, 132, 33, 254, 118, 28, 15, 192, 241, 227, 200, 64, 
       8, 149, 58, 70, 29, 7, 152, 22, 124, 173, 60, 202, 40, 42, 193, 73, 196, 114, 
       14, 247, 137, 18, 106, 172, 94, 66, 241, 189, 65, 110, 114, 73, 116, 80, 
       209, 55, 27, 199, 139, 2, 109, 174, 253, 45, 47, 47 };
  b1 = { 185, 203, 192, 21, 99, 43, 30, 237, 83, 55, 53, 88, 5, 134, 255, 212,
          217, 79, 28, 120, 130, 102, 18, 31, 204, 256, 156, 61, 224, 49, 30,
          216, 115, 152, 200, 219, 130, 13, 90, 169, 115, 215, 72, 189, 245, 
          122, 210, 0, 125, 76 };
  b2 = { 166, 139, 171, 172, 85, 101, 196, 172, 21, 28 };  

  // Encrypted Computation
  tstart();
  // First FC Layer
  for (j = 0; j < l1out_neurons; j++) {
    l1out_[j] = b1[j];
    for (i = 0; i < in_size; i++) {
      l1out_[j] += ((in_[i]) * (w[i]));
    }
  }
  // Activation Function (Square)
  for (i = 0; i < l1out_neurons; i++) {
    l1out_[i] *= l1out_[i];
  }
  // Second FC Layer
  for (j = 0; j < l2out_neurons; j++) {
    res_[j] = b2[j];
    for (i = 0; i < l1out_neurons; i++) {
      res_[j] += ((l1out_[i]) * (w[i]));
    }
  }
  tstop();

  // Print Results
  for (i = 0; i < l2out_neurons; i++) { 
    print(res_[i]); 
  }
  return 0;
}
