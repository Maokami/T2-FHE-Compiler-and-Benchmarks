uint32_t depth = 20;
double sigma = 3.2;
SecurityLevel securityLevel = HEStd_128_classic;
size_t plaintext_modulus = 32768*2+1;
CryptoContext<DCRTPoly> cc =
    CryptoContextFactory<DCRTPoly>::genCryptoContextBGVrns(
        depth, plaintext_modulus, securityLevel, sigma, depth, OPTIMIZED, BV);
cc->Enable(ENCRYPTION);
cc->Enable(SHE);
cc->Enable(LEVELEDSHE);
auto keyPair = cc->KeyGen();
cc->EvalMultKeyGen(keyPair.secretKey);
size_t slots(cc->GetRingDimension());
vector<int64_t> tmp_vec_(slots);
Plaintext tmp;
vector<vector<int64_t>> tmp_bin_vec_(word_sz, vector<int64_t>(slots, 0));
vector<Ciphertext<DCRTPoly>> tmp_(word_sz);
