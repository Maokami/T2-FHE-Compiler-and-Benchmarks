uint32_t multDepth = 2;
uint32_t scaleFactorBits = 40;
uint32_t slots = 8;
SecurityLevel securityLevel = HEStd_128_classic;
uint32_t ringDimension = 16384;
CryptoContext<DCRTPoly> cc = CryptoContextFactory<
  DCRTPoly>::genCryptoContextCKKS(multDepth,
    scaleFactorBits, slots, securityLevel, ringDimension, EXACTRESCALE);
cc->Enable(ENCRYPTION);
cc->Enable(SHE);
cc->Enable(LEVELEDSHE);
auto keyPair = cc->KeyGen();
int rots_num = 20;
vector<int> rots(rots_num);
for (int tmp_i = 2; tmp_i< rots_num+2; tmp_i += 2) {
    rots[tmp_i - 2] = tmp_i / 2;
    rots[tmp_i - 1] = -(tmp_i / 2);
}
cc->EvalAtIndexKeyGen(keyPair.secretKey, rots);
cc->EvalMultKeyGen(keyPair.secretKey);
vector<complex<double>> tmp_vec_(slots);
Plaintext tmp;
Ciphertext<DCRTPoly> tmp_;
