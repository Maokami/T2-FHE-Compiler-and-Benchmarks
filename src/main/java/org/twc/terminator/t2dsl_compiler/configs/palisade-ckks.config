uint32_t multDepth = 5;
uint32_t scaleFactorBits = 50;
uint32_t slots = 8;
SecurityLevel securityLevel = HEStd_128_classic;
// 0 means the library will choose it based on securityLevel
uint32_t ringDimension = 0;
CryptoContext<DCRTPoly> cc =
  CryptoContextFactory<DCRTPoly>::genCryptoContextCKKS(
    multDepth, scaleFactorBits, slots, securityLevel, ringDimension, EXACTRESCALE);

std::cout << "CKKS scheme is using ring dimension " << cc->GetRingDimension()
          << std::endl
          << std::endl;

cc->Enable(ENCRYPTION);
cc->Enable(SHE);
// When using EXACTRESCALE, LEVELEDSHE has to be enabled because Rescale is
// implicitly used upon multiplication.
cc->Enable(LEVELEDSHE);

auto keyPair = cc->KeyGen();
cc->EvalMultKeyGen(keyPair.secretKey);
Plaintext tmp;
Ciphertext<DCRTPoly> tmp_;
